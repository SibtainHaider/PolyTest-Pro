{"name": "test_sapphire", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pr-href=\"\" class=\"t4s-full-width-link is--href-replaced\" href=\"/collections/man/products/mst-2p23iv1-1-1\"></a> is not clickable at point (173, 563). Other element would receive the click: <div id=\"ins-frameless-overlay\" data-camp-id=\"1314\" close-on-click=\"true\" style=\"display: block; opacity: 0.6; background-color: rgb(0, 0, 0);\"></div>\n  (Session info: MicrosoftEdge=114.0.1823.82)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF75079AEC2+64226]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF75072C082+765362]\n\t(No symbol) [0x00007FF7504ECC4C]\n\t(No symbol) [0x00007FF7505382BA]\n\t(No symbol) [0x00007FF750535A43]\n\t(No symbol) [0x00007FF750533699]\n\t(No symbol) [0x00007FF7505326F5]\n\t(No symbol) [0x00007FF75052532C]\n\t(No symbol) [0x00007FF75054EFFA]\n\t(No symbol) [0x00007FF750524BB1]\n\t(No symbol) [0x00007FF750524A81]\n\t(No symbol) [0x00007FF75054F330]\n\t(No symbol) [0x00007FF750524BB1]\n\t(No symbol) [0x00007FF750567FC1]\n\t(No symbol) [0x00007FF75054EDD3]\n\t(No symbol) [0x00007FF750523BEC]\n\t(No symbol) [0x00007FF750522DD6]\n\t(No symbol) [0x00007FF750524364]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7509787C9+1319033]\n\t(No symbol) [0x00007FF75059D2A8]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7506795E1+33553]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF750671A1F+1871]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7509773E3+1313939]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7507346B8+20232]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF750730CD4+5412]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF750730DCC+5660]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF750724A81+735153]\n\tBaseThreadInitThunk [0x00007FF8FC287614+20]\n\tRtlUserThreadStart [0x00007FF8FC5626B1+33]", "trace": "fixturefunc = <function click at 0x00000214858FF640>\nrequest = <FixtureRequest for <Function test_sapphire>>\nkwargs = {'button_name': 'add bag', 'testfile': 'sapphire'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\_pytest\\fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_web_steps.py:76: in click\n    methods.clicker(box_update_path)\n..\\methods.py:7: in clicker\n    variable.click()\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000214851F79D0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...724A81+735153]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8FC287614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF8FC5626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a data-pr-href=\"\" class=\"t4s-full-width-link is--href-replaced\" href=\"/collections/man/products/mst-2p23iv1-1-1\"></a> is not clickable at point (173, 563). Other element would receive the click: <div id=\"ins-frameless-overlay\" data-camp-id=\"1314\" close-on-click=\"true\" style=\"display: block; opacity: 0.6; background-color: rgb(0, 0, 0);\"></div>\nE         (Session info: MicrosoftEdge=114.0.1823.82)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF75079AEC2+64226]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF75072C082+765362]\nE       \t(No symbol) [0x00007FF7504ECC4C]\nE       \t(No symbol) [0x00007FF7505382BA]\nE       \t(No symbol) [0x00007FF750535A43]\nE       \t(No symbol) [0x00007FF750533699]\nE       \t(No symbol) [0x00007FF7505326F5]\nE       \t(No symbol) [0x00007FF75052532C]\nE       \t(No symbol) [0x00007FF75054EFFA]\nE       \t(No symbol) [0x00007FF750524BB1]\nE       \t(No symbol) [0x00007FF750524A81]\nE       \t(No symbol) [0x00007FF75054F330]\nE       \t(No symbol) [0x00007FF750524BB1]\nE       \t(No symbol) [0x00007FF750567FC1]\nE       \t(No symbol) [0x00007FF75054EDD3]\nE       \t(No symbol) [0x00007FF750523BEC]\nE       \t(No symbol) [0x00007FF750522DD6]\nE       \t(No symbol) [0x00007FF750524364]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7509787C9+1319033]\nE       \t(No symbol) [0x00007FF75059D2A8]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7506795E1+33553]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF750671A1F+1871]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7509773E3+1313939]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7507346B8+20232]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF750730CD4+5412]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF750730DCC+5660]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF750724A81+735153]\nE       \tBaseThreadInitThunk [0x00007FF8FC287614+20]\nE       \tRtlUserThreadStart [0x00007FF8FC5626B1+33]\n\n..\\..\\..\\..\\appdata\\local\\programs\\python\\python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: ElementClickInterceptedException"}, "description": "../features/sapphire_checkout.feature: Checking the purchase feature", "attachments": [{"name": "urlbrowse", "source": "739723b2-56a1-47e7-a7d3-eaecaa193d57-attachment.png", "type": "image/png"}], "start": 1690889135457, "stop": 1690889191173, "uuid": "47b1c33f-4b12-4cc1-8d9d-fc785dd018af", "historyId": "46374ac637f8f18cd90616f1e8c3e690", "testCaseId": "46374ac637f8f18cd90616f1e8c3e690", "fullName": "test_web_steps#test_sapphire", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures"}, {"name": "tag", "value": "checkout"}, {"name": "suite", "value": "test_web_steps"}, {"name": "host", "value": "KHILT-2519"}, {"name": "thread", "value": "31236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_web_steps"}]}